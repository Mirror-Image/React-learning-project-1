{"version":3,"sources":["components/Navigation/MenuToggle/MenuToggle.module.css","components/Navigation/Drawer/Drawer.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","Drawer","map","link","index","key","href","this","close","Fragment","renderLinks","onClose","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","questionNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Quiz","isFinished","activeQuestion","answerState","rightAnswerID","onAnswerClickHandler","answerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","QuizWrapper","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.53aa143c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__2M1SV\",\"open\":\"MenuToggle_open__22VvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__17N_X\",\"close\":\"Drawer_close__1aYXv\",\"active\":\"Drawer_active__39s3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__3nPkQ\",\"QuizWrapper\":\"Quiz_QuizWrapper__192X0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__3uKD3\",\"Question\":\"ActiveQuiz_Question__2hs-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__21WsV\",\"success\":\"AnswerItem_success__2z3hP\",\"error\":\"AnswerItem_error__2u5Z1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__1Bp94\",\"success\":\"FinishedQuiz_success__1xWxa\",\"error\":\"FinishedQuiz_error__3rjfl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1vk0T\",\"error\":\"Button_error__2kUNP\",\"success\":\"Button_success__12G-O\",\"primary\":\"Button_primary__Q4Up_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3O302\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1vYCE\"};","import React from 'react';\r\nimport classes from './MenuToggle.module.css'\r\n\r\n\r\nconst MenuToggle = props => {\r\n  const cls = [\r\n    classes.MenuToggle,\r\n    'fa'\r\n  ]\r\n\r\n  if (props.isOpen) {\r\n    cls.push('fa-times')\r\n    cls.push(classes.open)\r\n  } else {\r\n    cls.push('fa-bars')\r\n  }\r\n\r\n\r\n  return (\r\n    <i\r\n      className={cls.join(' ')}\r\n      onClick={props.onToggle}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MenuToggle","import React from 'react';\r\nimport classes from './Backdrop.module.css'\r\n\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\r\n\r\nexport default Backdrop","import React, {Component} from 'react';\r\nimport classes from './Drawer.module.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop.js'\r\n\r\n\r\nconst links = [\r\n  1, 2, 3\r\n]\r\n\r\nclass Drawer extends Component {\r\n\r\n  renderLinks() {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <a href=\"#\">Link {link}</a>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const cls = [classes.Drawer]\r\n\r\n    if (!this.props.isOpen) {\r\n      cls.push(classes.close)\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className={cls.join(' ')}>\r\n          <ul>\r\n            {this.renderLinks()}\r\n          </ul>\r\n        </nav>\r\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\r\n      </React.Fragment>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from 'react';\r\nimport classes from './Layout.module.css'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\n\r\n\r\nclass Layout extends Component {\r\n\r\n  state = {\r\n    menu: false\r\n  }\r\n\r\n  toggleMenuHandler = () => {\r\n    this.setState({\r\n      menu: !this.state.menu\r\n    })\r\n  }\r\n\r\n  menuCloseHandler = () => {\r\n    this.setState({\r\n      menu: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Layout}>\r\n\r\n        <Drawer\r\n          isOpen={this.state.menu}\r\n          onClose={this.menuCloseHandler}\r\n        />\r\n\r\n        <MenuToggle\r\n          onToggle={this.toggleMenuHandler}\r\n          isOpen={this.state.menu}\r\n        />\r\n\r\n        <main>\r\n          {/*// контент*/}\r\n          {this.props.children}\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout","import React from 'react';\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n  // console.log(props)\r\n\r\n  const cls = [classes.AnswerItem]\r\n\r\n  if (props.state) {\r\n    cls.push(classes[props.state])\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={cls.join(' ')}\r\n      onClick={() => props.onAnswerClick(props.answer.id)}\r\n    >\r\n      {props.answer.text}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AnswerItem","import React from 'react';\r\nimport classes from './AnswersList.css'\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswersList = props => {\r\n  // console.log('List ', props)\r\n\r\n  return (\r\n  <ul className={classes.AnswersList}>\r\n    {props.answers.map((answer, index) => {\r\n      return (\r\n        <AnswerItem\r\n          key={index}\r\n          answer={answer}\r\n          onAnswerClick={props.onAnswerClick}\r\n          state={props.state ? props.state[answer.id] : null}\r\n        />\r\n      )\r\n    })}\r\n  </ul>\r\n)}\r\n\r\nexport default AnswersList","import React from 'react';\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\n\r\nconst ActiveQuiz = props => {\r\n  // console.log('Active', props)\r\n\r\n  return (\r\n    <div className={classes.ActiveQuiz}>\r\n      <p className={classes.Question}>\r\n        <span>\r\n          <strong>{props.questionNumber}.</strong>&nbsp;\r\n          {props.question}\r\n        </span>\r\n\r\n        <small>{props.questionNumber} из {props.quizLength}</small>\r\n      </p>\r\n\r\n      <AnswersList\r\n        state={props.state}\r\n        answers={props.answers}\r\n        onAnswerClick={props.onAnswerClick}\r\n      />\r\n    </div>\r\n  )}\r\n\r\nexport default ActiveQuiz","import React from 'react';\r\nimport classes from './Button.module.css'\r\n\r\n\r\nconst Button = props => {\r\n  const cls = [\r\n    classes.Button,\r\n    classes[props.type]\r\n  ]\r\n\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={cls.join(' ')}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n\r\n}\r\n\r\nexport default Button","import React from 'react';\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from \"../UI/Button/Button\";\r\n\r\n\r\nconst FinishedQuiz = props => {\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if (props.results[key] === 'success') {\r\n      total++\r\n    }\r\n    return total\r\n\r\n  }, 0)\r\n\r\n  return (\r\n    <div className={classes.FinishedQuiz}>\r\n      <ul>\r\n        {props.quiz.map((quizItem, index) => {\r\n          const cls = [\r\n            'fa',\r\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n            classes[props.results[quizItem.id]]\r\n          ]\r\n\r\n          // debugger\r\n\r\n          return (\r\n            <li\r\n              key={index}\r\n            >\r\n              <strong>{index + 1}</strong>.&nbsp;\r\n              {quizItem.question}\r\n              <i className={cls.join(' ')} />\r\n            </li>\r\n          )\r\n        })}\r\n        {/*<li>\r\n          <strong>1. </strong>\r\n          How are you?\r\n          <i className={'fa fa-times ' + classes.error} />\r\n        </li>\r\n        <li>\r\n          <strong>2. </strong>\r\n          How are you?\r\n          <i className={'fa fa-check ' + classes.success} />\r\n        </li>*/}\r\n      </ul>\r\n\r\n      <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n      <div>\r\n        {/*<button onClick={props.onRetry}>Повторить</button>*/}\r\n        <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n        <Button type=\"success\">Перейти в список тестов</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinishedQuiz","import React, {Component} from 'react';\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\r\n\r\n\r\nclass Quiz extends Component {\r\n  state = {\r\n    results: {}, // {[id]: 'success'/'error'}\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null, // {[id]: 'success'/'error'}\r\n    quiz: [\r\n      {\r\n        question: 'Какого цвета небо?',\r\n        rightAnswerID: 2,\r\n        id: 1,\r\n        answers: [\r\n          {text: 'Черный', id: 1},\r\n          {text: 'Синий', id: 2},\r\n          {text: 'Красный', id: 3},\r\n          {text: 'Зеленый', id: 4},\r\n        ]\r\n      },\r\n      {\r\n        question: 'В каком году основали Санкт-Петербург?',\r\n        rightAnswerID: 3,\r\n        id: 2,\r\n        answers: [\r\n          {text: '1700', id: 1},\r\n          {text: '1705', id: 2},\r\n          {text: '1703', id: 3},\r\n          {text: '1803', id: 4},\r\n        ]\r\n      },\r\n    ]\r\n  };\r\n\r\n  onAnswerClickHandler = (answerId) => {\r\n    if (this.state.answerState) {\r\n      const key = Object.keys(this.state.answerState)[0]\r\n\r\n      // чтобы при двойом клике на ответ не выскакивало 'Finished'\r\n      if (this.state.answerState[key] === 'success') {\r\n        return\r\n      }\r\n    }\r\n    const question = this.state.quiz[this.state.activeQuestion];\r\n    const results = this.state.results;\r\n\r\n    if (question.rightAnswerID === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success'\r\n      }\r\n\r\n      this.setState({\r\n        answerState: {[answerId]: 'success'},\r\n        results\r\n      })\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (this.isQuizFinished()) {\r\n          // console.log('Finished')\r\n          this.setState({\r\n            isFinished: true\r\n          })\r\n        } else {\r\n          this.setState({\r\n            activeQuestion: this.state.activeQuestion + 1,\r\n            answerState: null\r\n          })\r\n        }\r\n\r\n        window.clearTimeout(timeout)\r\n      }, 1000)\r\n\r\n    } else {\r\n      results[question.id] = 'error'\r\n      this.setState({\r\n        answerState: {[answerId]: 'error'},\r\n        // так как ключ и значение совпадают (смотри ниже коммент)\r\n        results\r\n        // results: results\r\n      })\r\n    }\r\n  }\r\n\r\n  isQuizFinished() {\r\n    return this.state.activeQuestion + 1 === this.state.quiz.length\r\n  }\r\n\r\n  retryHandler = () => {\r\n    this.setState({\r\n      activeQuestion: 0,\r\n      answerState: null,\r\n      isFinished: false,\r\n      results: {}\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Quiz}>\r\n\r\n        <div className={classes.QuizWrapper}>\r\n          <h1>Ответьте на все вопросы</h1>\r\n\r\n          {\r\n            this.state.isFinished\r\n              ? <FinishedQuiz\r\n                  results={this.state.results}\r\n                  quiz={this.state.quiz}\r\n                  onRetry={this.retryHandler}\r\n                />\r\n              : <ActiveQuiz\r\n                answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                question={this.state.quiz[this.state.activeQuestion].question}\r\n                onAnswerClick={this.onAnswerClickHandler}\r\n                quizLength={this.state.quiz.length}\r\n                questionNumber={this.state.activeQuestion + 1}\r\n                state={this.state.answerState}\r\n              />\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Quiz","import React from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport Quiz from './containers/Quiz/Quiz';\n\n\nfunction App() {\n  return (\n    <Layout>\n      <Quiz />\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}