{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Loader/Loader.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","store/actions/auth.js","containers/Auth/Auth.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","close","console","log","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","questionNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","axios","create","baseURL","fetchQuizSuccess","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","activeQuestion","quizAnswerClick","dispatch","quizId","a","get","response","data","answerId","getState","rightAnswerId","timeout","window","setTimeout","isQuizFinished","number","clearTimeout","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Select","options","option","createControl","config","validation","validate","isValid","required","trim","validateForm","formControls","isFormValid","control","hasOwnProperty","Auxiliary","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","submitHandler","event","preventDefault","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","controlName","selectChangeHandler","target","select","onSubmit","renderControls","item","post","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","email","password","minLength","loginHandler","registerHandler","onChangeHandler","validateControl","test","String","toLowerCase","errorMesage","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c91e0585.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__wR3bc\",\"close\":\"Drawer_close__1h6ce\",\"active\":\"Drawer_active__2bSyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__3MRcr\",\"open\":\"MenuToggle_open__2XDUn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__204TN\",\"QuizWrapper\":\"Quiz_QuizWrapper__1Vkp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__1vE3X\",\"Question\":\"ActiveQuiz_Question__1HF9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3TGtK\",\"success\":\"AnswerItem_success__2puvx\",\"error\":\"AnswerItem_error__3O_VT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2bP4V\",\"success\":\"FinishedQuiz_success__1ZX88\",\"error\":\"FinishedQuiz_error__2cEyp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__E4TKQ\",\"error\":\"Button_error__3TJFH\",\"success\":\"Button_success__1SvpX\",\"primary\":\"Button_primary__1CK4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2VoRF\",\"invalid\":\"Input_invalid__kyDeu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2Y0SJ\",\"AuthForm\":\"Auth_AuthForm__3wS8W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2lECz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2e-GX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__nczS6\",\"lds-ring\":\"Loader_lds-ring__MxPgW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__3D9l3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__3xpaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__sQgj_\"};","import React from 'react';\r\nimport classes from './MenuToggle.module.css'\r\n\r\n\r\nconst MenuToggle = props => {\r\n  const cls = [\r\n    classes.MenuToggle,\r\n    'fa'\r\n  ]\r\n\r\n  if (props.isOpen) {\r\n    cls.push('fa-times')\r\n    cls.push(classes.open)\r\n  } else {\r\n    cls.push('fa-bars')\r\n  }\r\n\r\n\r\n  return (\r\n    <i\r\n      className={cls.join(' ')}\r\n      onClick={props.onToggle}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MenuToggle","import React from 'react';\r\nimport classes from './Backdrop.module.css'\r\n\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\r\n\r\nexport default Backdrop","import React, {Component} from 'react';\r\nimport classes from './Drawer.module.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop.js'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nclass Drawer extends Component {\r\n\r\n  clickHandler = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  renderLinks(links) {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <NavLink\r\n            to={link.to}\r\n            exact={link.exact}\r\n            activeClassName={classes.active}\r\n            onClick={this.clickHandler}\r\n          >\r\n            {link.label}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const cls = [classes.Drawer]\r\n\r\n    if (!this.props.isOpen) {\r\n      cls.push(classes.close)\r\n    }\r\n\r\n    const links = [\r\n      {to: '/', label: 'Список', exact: true},\r\n    ]\r\n\r\n    console.log('AUTH', this.props.isAuthenticated)\r\n\r\n    if (this.props.isAuthenticated) {\r\n      links.push({to: '/quiz-creator', label: 'Создать тест', exact: false})\r\n      links.push({to: '/logout', label: 'Выйти', exact: false})\r\n\r\n    } else {\r\n      links.push({to: '/auth', label: 'Авторизация', exact: false})\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className={cls.join(' ')}>\r\n          <ul>\r\n            {this.renderLinks(links)}\r\n          </ul>\r\n        </nav>\r\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\r\n      </React.Fragment>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from 'react';\r\nimport classes from './Layout.module.css'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass Layout extends Component {\r\n\r\n  state = {\r\n    menu: false\r\n  }\r\n\r\n  toggleMenuHandler = () => {\r\n    this.setState({\r\n      menu: !this.state.menu\r\n    })\r\n  }\r\n\r\n  menuCloseHandler = () => {\r\n    this.setState({\r\n      menu: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Layout}>\r\n\r\n        <Drawer\r\n          isOpen={this.state.menu}\r\n          onClose={this.menuCloseHandler}\r\n          isAuthenticated={this.props.isAuthenticated}\r\n        />\r\n\r\n        <MenuToggle\r\n          onToggle={this.toggleMenuHandler}\r\n          isOpen={this.state.menu}\r\n        />\r\n\r\n        <main>\r\n          {/*// контент*/}\r\n          {this.props.children}\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: !!state.auth.token\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)","import React from 'react';\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n  // console.log(props)\r\n\r\n  const cls = [classes.AnswerItem]\r\n\r\n  if (props.state) {\r\n    cls.push(classes[props.state])\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={cls.join(' ')}\r\n      onClick={() => props.onAnswerClick(props.answer.id)}\r\n    >\r\n      {props.answer.text}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AnswerItem","import React from 'react';\r\nimport classes from './AnswersList.css'\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswersList = props => {\r\n  console.log('List ', props)\r\n\r\n  return (\r\n  <ul className={classes.AnswersList}>\r\n    {props.answers.map((answer, index) => {\r\n      return (\r\n        <AnswerItem\r\n          key={index}\r\n          answer={answer}\r\n          onAnswerClick={props.onAnswerClick}\r\n          state={props.state ? props.state[answer.id] : null}\r\n        />\r\n      )\r\n    })}\r\n  </ul>\r\n)}\r\n\r\nexport default AnswersList","import React from 'react';\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\n\r\nconst ActiveQuiz = props => {\r\n  // console.log('Active', props)\r\n  return (\r\n    <div className={classes.ActiveQuiz}>\r\n      <p className={classes.Question}>\r\n        <span>\r\n          <strong>{props.questionNumber}.</strong>&nbsp;\r\n          {props.question}\r\n        </span>\r\n\r\n        <small>{props.questionNumber} из {props.quizLength}</small>\r\n      </p>\r\n\r\n      <AnswersList\r\n        state={props.state}\r\n        answers={props.answers}\r\n        onAnswerClick={props.onAnswerClick}\r\n      />\r\n    </div>\r\n  )}\r\n\r\nexport default ActiveQuiz","import React from 'react';\r\nimport classes from './Button.module.css'\r\n\r\n\r\nconst Button = props => {\r\n  const cls = [\r\n    classes.Button,\r\n    classes[props.type]\r\n  ]\r\n\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={cls.join(' ')}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n\r\n}\r\n\r\nexport default Button","import React from 'react';\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from \"../UI/Button/Button\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst FinishedQuiz = props => {\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if (props.results[key] === 'success') {\r\n      total++\r\n    }\r\n    return total\r\n\r\n  }, 0)\r\n\r\n  return (\r\n    <div className={classes.FinishedQuiz}>\r\n      <ul>\r\n        {props.quiz.map((quizItem, index) => {\r\n          const cls = [\r\n            'fa',\r\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n            classes[props.results[quizItem.id]]\r\n          ]\r\n\r\n          // debugger\r\n\r\n          return (\r\n            <li\r\n              key={index}\r\n            >\r\n              <strong>{index + 1}</strong>.&nbsp;\r\n              {quizItem.question}\r\n              <i className={cls.join(' ')} />\r\n            </li>\r\n          )\r\n        })}\r\n        {/*<li>\r\n          <strong>1. </strong>\r\n          How are you?\r\n          <i className={'fa fa-times ' + classes.error} />\r\n        </li>\r\n        <li>\r\n          <strong>2. </strong>\r\n          How are you?\r\n          <i className={'fa fa-check ' + classes.success} />\r\n        </li>*/}\r\n      </ul>\r\n\r\n      <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n      <div>\r\n        {/*<button onClick={props.onRetry}>Повторить</button>*/}\r\n        <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n\r\n        <Link to={'/'}>\r\n          <Button type=\"success\">Перейти в список тестов</Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinishedQuiz","import React from 'react';\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = props => (\r\n  <div className={classes.Loader}>\r\n    <div/>\r\n    <div/>\r\n    <div/>\r\n    <div/>\r\n  </div>\r\n)\r\n\r\nexport default Loader","import axios from 'axios'\r\n\r\n\r\nexport default axios.create({\r\n  baseURL:'https://react-quiz-a73ba.firebaseio.com/'\r\n})","import axios from '../../axios/axios-quiz';\r\nimport {\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  QUIZ_SET_STATE,\r\n  FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION,\r\n  QUIZ_RETRY\r\n} from './actionTypes';\r\n\r\n\r\nexport function fetchQuizes() {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart());\r\n\r\n    try {\r\n      const response = await axios.get('quizes.json')\r\n\r\n      const quizes = []\r\n      Object.keys(response.data).forEach((key, index) => {\r\n        quizes.push({\r\n          id: key,\r\n          name: `Тест №${index + 1}`\r\n        })\r\n      })\r\n\r\n      dispatch(fetchQuizesSuccess(quizes))\r\n    } catch (e) {\r\n      // console.log(e)\r\n      dispatch(fetchQuizesError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n\r\n    try {\r\n      const response = await axios.get(`quizes/${quizId}.json`)\r\n      const quiz = response.data\r\n\r\n      dispatch(fetchQuizSuccess(quiz))\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n  return {\r\n    type: 'FETCH_QUIZ_SUCCESS',\r\n    quiz\r\n  }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n  return {\r\n    type: FETCH_QUIZES_START\r\n  }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n  return {\r\n    type: FETCH_QUIZES_SUCCESS,\r\n    // quizes: quizes,\r\n    quizes\r\n  }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n  return {\r\n    type: FETCH_QUIZES_ERROR,\r\n    error: e\r\n  }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n  return {\r\n    type: QUIZ_SET_STATE,\r\n    answerState,\r\n    results\r\n  }\r\n}\r\n\r\nexport function finishQuiz() {\r\n  return {\r\n    type: FINISH_QUIZ\r\n  }\r\n}\r\n\r\nexport function quizNextQuestion(questionNumber) {\r\n  return {\r\n    type: QUIZ_NEXT_QUESTION,\r\n    number: questionNumber\r\n  }\r\n}\r\n\r\nexport function retryQuiz() {\r\n  return {\r\n    type: QUIZ_RETRY\r\n  }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n  return (dispatch, getState) => {\r\n    const state = getState().quiz\r\n\r\n    if (state.answerState) {\r\n      const key = Object.keys(state.answerState)[0]\r\n\r\n      // чтобы при двойом клике на ответ не выскакивало 'Finished'\r\n      if (state.answerState[key] === 'success') {\r\n        return\r\n      }\r\n    }\r\n    const question = state.quiz[state.activeQuestion];\r\n    const results = state.results;\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success'\r\n      }\r\n\r\n      dispatch(quizSetState({[answerId]: 'success'}, results))\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (isQuizFinished(state)) {\r\n          dispatch(finishQuiz())\r\n\r\n        } else {\r\n          console.log(state.activeQuestion + 1)\r\n          dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n\r\n        }\r\n\r\n        window.clearTimeout(timeout)\r\n      }, 1000)\r\n\r\n    } else {\r\n      results[question.id] = 'error'\r\n      dispatch(quizSetState({[answerId]: 'error'}, results))\r\n    }\r\n  }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n  return state.activeQuestion + 1 === state.quiz.length\r\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION';\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY';\r\n\r\nexport const CREATE_QUIZ_ACTION = 'CREATE_QUIZ_ACTION';\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React, {Component} from 'react';\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from '../../store/actions/quiz'\r\n\r\n\r\nclass Quiz extends Component {\r\n  /*state = {\r\n    results: {}, // {[id]: 'success'/'error'}\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null, // {[id]: 'success'/'error'}\r\n    quiz: [\r\n      /!*{\r\n        question: 'Какого цвета небо?',\r\n        rightAnswerID: 2,\r\n        id: 1,\r\n        answers: [\r\n          {text: 'Черный', id: 1},\r\n          {text: 'Синий', id: 2},\r\n          {text: 'Красный', id: 3},\r\n          {text: 'Зеленый', id: 4},\r\n        ]\r\n      },\r\n      {\r\n        question: 'В каком году основали Санкт-Петербург?',\r\n        rightAnswerID: 3,\r\n        id: 2,\r\n        answers: [\r\n          {text: '1700', id: 1},\r\n          {text: '1705', id: 2},\r\n          {text: '1703', id: 3},\r\n          {text: '1803', id: 4},\r\n        ]\r\n      },*!/\r\n    ],\r\n    loading: true\r\n  };*/\r\n\r\n  /*onAnswerClickHandler = (answerId) => {\r\n    if (this.state.answerState) {\r\n      const key = Object.keys(this.state.answerState)[0]\r\n\r\n      // чтобы при двойом клике на ответ не выскакивало 'Finished'\r\n      if (this.state.answerState[key] === 'success') {\r\n        return\r\n      }\r\n    }\r\n    const question = this.state.quiz[this.state.activeQuestion];\r\n    const results = this.state.results;\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success'\r\n      }\r\n\r\n      this.setState({\r\n        answerState: {[answerId]: 'success'},\r\n        results\r\n      })\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (this.isQuizFinished()) {\r\n          // console.log('Finished')\r\n          this.setState({\r\n            isFinished: true\r\n          })\r\n        } else {\r\n          this.setState({\r\n            activeQuestion: this.state.activeQuestion + 1,\r\n            answerState: null\r\n          })\r\n        }\r\n\r\n        window.clearTimeout(timeout)\r\n      }, 1000)\r\n\r\n    } else {\r\n      results[question.id] = 'error'\r\n      this.setState({\r\n        answerState: {[answerId]: 'error'},\r\n        // так как ключ и значение совпадают (смотри ниже коммент)\r\n        results\r\n        // results: results\r\n      })\r\n    }\r\n  }*/\r\n\r\n  /*isQuizFinished() {\r\n    return this.state.activeQuestion + 1 === this.state.quiz.length\r\n  }*/\r\n\r\n  /*retryHandler = () => {\r\n    this.setState({\r\n      activeQuestion: 0,\r\n      answerState: null,\r\n      isFinished: false,\r\n      results: {}\r\n    })\r\n  }*/\r\n\r\n  /*async componentDidMount() {\r\n    try {\r\n      const response = await axios.get(`quizes/${this.props.match.params.id}.json`)\r\n      const quiz = response.data\r\n\r\n      console.log(quiz)\r\n\r\n      this.setState({\r\n        quiz, loading: false\r\n      })\r\n\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n\r\n    console.log('Quiz ID = ', this.props.match.params.id)\r\n  }*/\r\n  componentDidMount() {\r\n    this.props.fetchQuizById(this.props.match.params.id)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.retryQuiz()\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.quiz);\r\n    return (\r\n      <div className={classes.Quiz}>\r\n\r\n        <div className={classes.QuizWrapper}>\r\n          <h1>Ответьте на все вопросы</h1>\r\n\r\n          {\r\n            this.props.loading || !this.props.quiz\r\n              ? <Loader />\r\n              : this.props.isFinished\r\n                ? <FinishedQuiz\r\n                  results={this.props.results}\r\n                  quiz={this.props.quiz}\r\n                  onRetry={this.props.retryQuiz}\r\n                />\r\n                : <ActiveQuiz\r\n                  answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                  question={this.props.quiz[this.props.activeQuestion].question}\r\n                  onAnswerClick={this.props.quizAnswerClick}\r\n                  quizLength={this.props.quiz.length}\r\n                  questionNumber={this.props.activeQuestion + 1}\r\n                  state={this.props.answerState}\r\n                />\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    results: state.quiz.results, // {[id]: 'success'/'error'}\r\n    isFinished:state.quiz.isFinished,\r\n    activeQuestion: state.quiz.activeQuestion,\r\n    answerState: state.quiz.answerState, // {[id]: 'success'/'error'}\r\n    quiz: state.quiz.quiz,\r\n    loading: state.quiz.loading\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n    quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n    retryQuiz: () => dispatch(retryQuiz())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, {Component} from 'react';\r\nimport classes from './QuizList.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport {connect} from 'react-redux'\r\nimport {fetchQuizes} from '../../store/actions/quiz'\r\n\r\n\r\nclass QuizList extends Component {\r\n\r\n  renderQuizes() {\r\n    return this.props.quizes.map((quiz) => {\r\n      return (\r\n        <li\r\n          key={quiz.id}\r\n        >\r\n          <NavLink to={'/quiz/' + quiz.id}>\r\n            {quiz.name}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n  // работать с back-end можно только после прорисовки DOM-дерева, так как до этого мы не можем изменять state\r\n  // для этого используют метод:\r\n  /*async componentDidMount() {\r\n    try {\r\n      const response = await axios.get('quizes.json')\r\n\r\n      const quizes = []\r\n      Object.keys(response.data).forEach((key, index) => {\r\n        quizes.push({\r\n          id: key,\r\n          name: `Тест №${index + 1}`\r\n        })\r\n      })\r\n\r\n      this.setState({\r\n        quizes, loading: false\r\n      })\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n\r\n  }*/\r\n  componentDidMount() {\r\n    this.props.fetchQuizes()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.QuizList}>\r\n        <div>\r\n          <h1>Список тестов</h1>\r\n\r\n          {\r\n            this.props.loading && this.props.quizes.length !== 0\r\n              ? <Loader/>\r\n              : <ul>\r\n                {this.renderQuizes()}\r\n              </ul>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quizes: state.quiz.quizes,\r\n    loading: state.quiz.loading\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizes: () => dispatch(fetchQuizes())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from 'react';\r\nimport classes from './Input.module.css'\r\n\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n  return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = (props) => {\r\n\r\n  const inputType = props.type || 'text'\r\n  const cls = [classes.Input]\r\n  const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n  if (isInvalid(props)) {\r\n    cls.push(classes.invalid)\r\n  }\r\n\r\n  return(\r\n    <div className={cls.join(' ')}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <input\r\n        type={inputType}\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n\r\n      {\r\n        isInvalid(props)\r\n          ? <span>{props.errorMessage || 'Введите допустимое значение'}</span>\r\n          : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import React from 'react';\r\nimport classes from './Select.module.css'\r\n\r\n\r\nconst Select = props => {\r\n\r\n  const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n  return (\r\n    <div className={classes.Select}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <select\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      >\r\n        {props.options.map((option, index) => {\r\n          return (\r\n            <option\r\n              value={option.value}\r\n              key={option.value + index}\r\n            >\r\n              {option.text}\r\n            </option>\r\n          )\r\n        })}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Select","export function createControl(config, validation) {\r\n  return {\r\n    ...config,\r\n    validation,\r\n    valid: !validation,\r\n    touched: false,\r\n    value: ''\r\n  }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n  if (!validation) {\r\n    return true\r\n  }\r\n\r\n  let isValid = true\r\n\r\n  if (validation.required) {\r\n    isValid = value.trim() !== '' && isValid\r\n  }\r\n\r\n  return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n  let isFormValid = true\r\n\r\n  for (let control in formControls) {\r\n    if (formControls.hasOwnProperty(control)) {\r\n      isFormValid = formControls[control].valid && isFormValid\r\n    }\r\n\r\n  }\r\n\r\n  return isFormValid\r\n}","const Auxiliary = props => props.children\r\n\r\nexport default Auxiliary","import React, {Component} from 'react';\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Select from '../../components/UI/Select/Select';\r\nimport {createControl, validate, validateForm} from '../../form/formFramework'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\nimport {connect} from \"react-redux\";\r\nimport {createQuizQuestion, finishCreateQuiz} from \"../../store/actions/create\";\r\n\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl({\r\n    label: `Вариант ${number}`,\r\n    errorMessage: 'Значение не может быть пустым',\r\n    id: number\r\n  }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl({\r\n      label: 'Введите вопрос',\r\n      errorMessage: 'Вопрос не может быть пустым'\r\n    }, {required: true}),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4)\r\n  }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControls()\r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  addQuestionHandler = event => {\r\n    event.preventDefault()\r\n\r\n    const {question, option1, option2, option3, option4} = this.state.formControls\r\n\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: this.props.quiz.length + 1,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        {text: option1.value, id: option1.id},\r\n        {text: option2.value, id: option2.id},\r\n        {text: option3.value, id: option3.id},\r\n        {text: option4.value, id: option4.id}\r\n      ]\r\n    }\r\n\r\n    this.props.createQuizQuestion(questionItem)\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n  }\r\n\r\n  createQuizHandler = event => {\r\n    event.preventDefault()\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n    this.props.finishCreateQuiz()\r\n\r\n  }\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = {...this.state.formControls}\r\n    const control = {...formControls[controlName]}\r\n\r\n    control.touched = true\r\n    control.value = value\r\n    control.valid = validate(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid: validateForm(formControls)\r\n    })\r\n  }\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control =this.state.formControls[controlName]\r\n\r\n      return (\r\n        <Auxiliary key={controlName + index}>\r\n          <Input\r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.validation}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={event => this.changeHandler(event.target.value, controlName)}\r\n          />\r\n          {index === 0 ? <hr /> : null}\r\n        </Auxiliary>\r\n      )\r\n    })\r\n  }\r\n\r\n  selectChangeHandler = event => {\r\n    this.setState({\r\n      rightAnswerId: +event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const select = <Select\r\n      label=\"Выберите правильный ответ\"\r\n      value={this.state.rightAnswerId}\r\n      onChange={this.selectChangeHandler}\r\n      options={[\r\n        {text: 1, value: 1},\r\n        {text: 2, value: 2},\r\n        {text: 3, value: 3},\r\n        {text: 4, value: 4}\r\n      ]}\r\n    />\r\n\r\n    return (\r\n      <div className={classes.QuizCreator}>\r\n        <div>\r\n          <h1>Создание теста</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n\r\n            {this.renderControls()}\r\n\r\n            {select}\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.addQuestionHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Добавить вопрос\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n              disabled={this.props.quiz.length === 0}\r\n            >\r\n              Создать тест\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quiz: state.create.quiz\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n    finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n  }\r\n}\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import {CREATE_QUIZ_ACTION, RESET_QUIZ_CREATION} from \"./actionTypes\";\r\nimport axios from \"../../axios/axios-quiz\";\r\n\r\n\r\nexport function createQuizQuestion(item) {\r\n  return {\r\n    type: CREATE_QUIZ_ACTION,\r\n    item\r\n  }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n  return {\r\n    type: RESET_QUIZ_CREATION\r\n  }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n  return async (dispatch, getState) => {\r\n    await axios.post('quizes.json', getState().create.quiz)\r\n    dispatch(resetQuizCreation())\r\n  }\r\n}","import axios from 'axios'\r\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from \"./actionTypes\";\r\n\r\n\r\nexport function auth(email, password, isLogin) {\r\n  return async dispatch => {\r\n    const authData = {\r\n      email,\r\n      password,\r\n      returnSecureToken: true\r\n    }\r\n\r\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBuLBpqnpExC0cZ74DkUfUQMXvxYpz8G-I'\r\n\r\n    if(isLogin) {\r\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBuLBpqnpExC0cZ74DkUfUQMXvxYpz8G-I'\r\n    }\r\n\r\n    const response = await axios.post(url, authData)\r\n    const data = response.data\r\n\r\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n    localStorage.setItem('token', data.idToken)\r\n    localStorage.setItem('userId', data.localId)\r\n    localStorage.setItem('expirationDate', expirationDate)\r\n\r\n    dispatch(authSuccess(data.idToken))\r\n    dispatch(autoLogout(data.expiresIn))\r\n  }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout())\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem('token')\r\n  localStorage.removeItem('userId')\r\n  localStorage.removeItem('expirationDate')\r\n\r\n  return {\r\n    type: AUTH_LOGOUT\r\n  }\r\n}\r\n\r\nexport function autoLogin() {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token')\r\n    if (!token) {\r\n      dispatch(logout())\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n\r\n      if (expirationDate <= new Date) {\r\n        dispatch(logout())\r\n      } else {\r\n        dispatch(authSuccess(token))\r\n        dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    token\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport {connect} from \"react-redux\";\r\nimport {auth} from \"../../store/actions/auth\";\r\n\r\n\r\nfunction validateEmail(email) {\r\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass Auth extends Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      email: {\r\n        value: '',\r\n        type: 'email',\r\n        label: 'Email',\r\n        errorMessage: 'Введите корректный email',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Пароль',\r\n        errorMessage: 'Введите корректный пароль',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loginHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      true\r\n    )\r\n  }\r\n\r\n  registerHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      false\r\n    )\r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = validateEmail(value) && isValid\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.trim().length >= validation.minLength && isValid\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  onChangeHandler = (event, controlName) => {\r\n    // console.log(`${controlName}: `, event.target.value)\r\n\r\n    const formControls = {...this.state.formControls}\r\n    const control = {...formControls[controlName]}\r\n\r\n    control.value = event.target.value\r\n    control.touched = true\r\n    control.valid = this.validateControl(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    let isFormValid = true\r\n    Object.keys(formControls).forEach(name => {\r\n      isFormValid = formControls[name].valid && isFormValid\r\n    })\r\n\r\n    this.setState({\r\n      formControls, isFormValid\r\n    })\r\n  }\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMesage={control.errorMessage}\r\n          onChange={(event) => this.onChangeHandler(event, controlName)}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Auth}>\r\n        <div>\r\n          <h1>Авторизация</h1>\r\n\r\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n            {this.renderInputs()}\r\n\r\n            {/*<Input\r\n              label=\"Email\"\r\n            />\r\n\r\n            <Input\r\n              label=\"Пароль\"\r\n              errorMessage={'TEST'}\r\n            />*/}\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.loginHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >Войти</Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.registerHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >Зарегистрироваться</Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n  }\r\n}\r\n\r\nexport default  connect(null ,mapDispatchToProps)(Auth)","import React, {Component} from 'react';\r\nimport {logout} from \"../../store/actions/auth\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.logout()\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to={'/'} />\r\n  }\r\n}\r\n\r\nfunction  mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: () => dispatch(logout())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, {Component} from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom'\nimport Quiz from './containers/Quiz/Quiz'\nimport QuizList from './containers/QuizList/QuizList'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\nimport Auth from './containers/Auth/Auth'\nimport {connect} from \"react-redux\";\nimport Logout from \"./components/Logout/Logout\";\nimport {autoLogin} from \"./store/actions/auth\";\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.autoLogin()\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth}/>\n        <Route path=\"/quiz/:id\" component={Quiz}/>\n        <Route path=\"/\" exact component={QuizList}/>\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/quiz-creator\" component={QuizCreator}/>\n          <Route path=\"/quiz/:id\" component={Quiz}/>\n          <Route path=\"/logout\" component={Logout}/>\n          <Route path=\"/\" exact component={QuizList}/>\n          <Redirect to=\"/\" />\n        </Switch>\n      )\n    }\n\n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS,\r\n  FETCH_QUIZ_SUCCESS,\r\n  QUIZ_SET_STATE,\r\n  FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION,\r\n  QUIZ_RETRY\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  quizes: [],\r\n  loading: false,\r\n  error: null,\r\n  results: {}, // {[id]: 'success'/'error'}\r\n  isFinished: false,\r\n  activeQuestion: 0,\r\n  answerState: null, // {[id]: 'success'/'error'}\r\n  quiz: null,\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case FETCH_QUIZES_START:\r\n      return {\r\n        ...state, loading: true\r\n      }\r\n\r\n    case FETCH_QUIZES_SUCCESS:\r\n      return {\r\n        ...state, loading: false, quizes: action.quizes\r\n      }\r\n\r\n    case FETCH_QUIZES_ERROR:\r\n      return {\r\n        ...state, loading: false, error: action.error\r\n      }\r\n\r\n    case FETCH_QUIZ_SUCCESS:\r\n      return {\r\n        ...state, loading: false, quiz: action.quiz\r\n      }\r\n\r\n    case QUIZ_SET_STATE:\r\n      return {\r\n        ...state, answerState: action.answerState, results: action.results\r\n      }\r\n\r\n    case FINISH_QUIZ:\r\n      return {\r\n        ...state, isFinished: true\r\n      }\r\n\r\n    case QUIZ_NEXT_QUESTION:\r\n      return {\r\n        ...state, answerState: null, activeQuestion: action.number\r\n      }\r\n\r\n    case QUIZ_RETRY:\r\n      return {\r\n        ...state,\r\n        activeQuestion: 0,\r\n        answerState: null,\r\n        isFinished: false,\r\n        results: {}\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {CREATE_QUIZ_ACTION, RESET_QUIZ_CREATION} from \"../actions/actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n  quiz: []\r\n}\r\n\r\nexport default function createReducer(state= initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_QUIZ_ACTION:\r\n      return {\r\n        ...state,\r\n        quiz: [...state.quiz, action.item]\r\n      }\r\n\r\n    case RESET_QUIZ_CREATION:\r\n      return {\r\n        ...state, quiz: []\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        ...state, token: action.token\r\n      }\r\n\r\n    case AUTH_LOGOUT:\r\n      return {\r\n        ...state, token: null\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import {combineReducers} from 'redux'\r\nimport quizReducer from './quiz';\r\nimport createReducer from \"./create\";\r\nimport authReducer from \"./auth\";\r\n\r\n\r\n/*\r\nrootReducer - это функция которая объединяет все reducer'ы\r\n*/\r\nexport default combineReducers({\r\n  quiz: quizReducer,\r\n  create: createReducer,\r\n  auth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}